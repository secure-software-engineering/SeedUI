diff --git a/src/afl-fuzz-bitmap.c b/src/afl-fuzz-bitmap.c
index c6b1723d..f008e069 100644
--- a/src/afl-fuzz-bitmap.c
+++ b/src/afl-fuzz-bitmap.c
@@ -707,13 +707,24 @@ u8 __attribute__((hot)) save_if_interesting(afl_state_t *afl, void *mem,
 #ifndef SIMPLE_FILES
 
     if (!afl->afl_env.afl_sha1_filenames) {
-
+      u32    t_bytes = count_non_255_bytes(afl, afl->virgin_bits);
+      double t_byte_ratio = ((double)t_bytes * 100) / afl->fsrv.real_map_size;
       queue_fn = alloc_printf(
-          "%s/queue/id:%06u,%s%s%s", afl->out_dir, afl->queued_items,
+          "%s/queue/"
+          "cycle:%lld,id:%06u,executed_on:%lld,%s,gain:%d,score:%0.0f,depth:"
+          "%d,"
+          "bitmap_cvg:%0.02f,edges_found:%u",
+          afl->out_dir, afl->queue_cycle, afl->queued_items, get_cur_time(),
           describe_op(afl, new_bits + is_timeout,
                       NAME_MAX - strlen("id:000000,")),
-          afl->file_extension ? "." : "",
-          afl->file_extension ? (const char *)afl->file_extension : "");
+          new_bits, afl->queue_cur->perf_score, afl->cur_depth, t_byte_ratio, t_bytes);
+
+      // queue_fn = alloc_printf(
+      //     "%s/queue/id:%06u,%s%s%s", afl->out_dir, afl->queued_items,
+      //     describe_op(afl, new_bits + is_timeout,
+      //                 NAME_MAX - strlen("id:000000,")),
+      //     afl->file_extension ? "." : "",
+      //     afl->file_extension ? (const char *)afl->file_extension : "");
 
     } else {
 
diff --git a/src/afl-fuzz-init.c b/src/afl-fuzz-init.c
index c46abade..f0285e05 100644
--- a/src/afl-fuzz-init.c
+++ b/src/afl-fuzz-init.c
@@ -1618,12 +1618,16 @@ void pivot_inputs(afl_state_t *afl) {
       }
 
       if (!afl->afl_env.afl_sha1_filenames) {
-
         nfn = alloc_printf(
-            "%s/queue/id:%06u,time:0,execs:%llu,orig:%s%s%s", afl->out_dir, id,
-            afl->fsrv.total_execs, use_name, afl->file_extension ? "." : "",
+            "%s/queue/id:%06u,time:0,executed_on:%lld,execs:%llu,orig:%s%s%s", afl->out_dir, id,
+            get_cur_time(), afl->fsrv.total_execs, use_name, afl->file_extension ? "." : "",
             afl->file_extension ? (const char *)afl->file_extension : "");
 
+        // nfn = alloc_printf(
+        //     "%s/queue/id:%06u,time:0,execs:%llu,orig:%s%s%s", afl->out_dir, id,
+        //     afl->fsrv.total_execs, use_name, afl->file_extension ? "." : "",
+        //     afl->file_extension ? (const char *)afl->file_extension : "");
+
       } else {
 
         const char *hex = sha1_hex_for_file(q->fname, q->len);
